name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler: [gfortran-9, gfortran-10, gfortran-11]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libnetcdff-dev

      - name: Setup Python (for f90nml)
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install f90nml

      - name: Check that default input is nc
        run: |
          import f90nml
          with open("input/namelist.canopy") as f:
            nml = f90nml.read(f)
          assert nml["filenames"]["file_vars"].endswith((".nc", ".ncf")), "nc input by default, like build"
          assert nml["userdefs"]["infmt_opt"] == 0, "necessary to read 2-D"
        shell: python

      - name: Debug compile and run
        run: |
          make -C src clean
          make -C src
          ./canopy
        env:
          DEBUG: 1
          FC: ${{ matrix.compiler }}

      - name: Non-debug compile and run
        run: |
          make -C src clean
          make -C src
          ./canopy
        env:
          DEBUG: 0
          FC: ${{ matrix.compiler }}

      - name: Non-NetCDF compile and run
        run: |
          make -C src clean
          make -C src
          f90nml -g filenames -v file_vars=input/gfs.t12z.20220701.sfcf000.canopy.txt \
            input/namelist.canopy input/namelist.canopy
          f90nml -g userdefs -v infmt_opt=1 \
            input/namelist.canopy input/namelist.canopy
          ./canopy
        env:
          DEBUG: 0
          FC: ${{ matrix.compiler }}
          NETCDF: 0
